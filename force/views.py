# force/views.py

from django.shortcuts import render
import google.generativeai as genai
from django.conf import settings
import json
from django.http import JsonResponse

def chat_view(request):
    """
    ูุนุฑุถ ุตูุญุฉ ุงูุฏุฑุฏุดุฉ ุงูุฑุฆูุณูุฉ.
    """
    return render(request, 'chat.html')

def ask_gemini(request):
    """
    ูุชููู ุงูุทูุจุงุช ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉุ ูุชุตู ุจู Gemini APIุ ููุนูุฏ ุงูุฅุฌุงุจุฉ.
    """
    # 1. ุงูุชุญูู ูู ููุชุงุญ API ูุฅุนุฏุงุฏู
    try:
        api_key = settings.GEMINI_API_KEY
        if not api_key:
            return JsonResponse({'error': 'ููุชุงุญ API ุงูุฎุงุต ุจู Gemini ุบูุฑ ูููุฃ ูู ุงูุฅุนุฏุงุฏุงุช.'}, status=500)
        genai.configure(api_key=api_key)
    except AttributeError:
        return JsonResponse({'error': 'ููุชุงุญ API ุงูุฎุงุต ุจู Gemini ุบูุฑ ููุฌูุฏ ูู ููู ุงูุฅุนุฏุงุฏุงุช.'}, status=500)

    # 2. ุงุณุชุฎูุงุต ุงูุจูุงูุงุช ูู ุงูุทูุจ
    try:
        data = json.loads(request.body)
        prompt = data.get('prompt')
        history = data.get('history', []) 
        user_name = data.get('userName', 'ุงููุณุชุฎุฏู')
        ai_name = data.get('aiName', 'ุงููุณุงุนุฏ')

        if not prompt:
            return JsonResponse({'error': 'ุงูุทูุจ (prompt) ูุงุฑุบ.'}, status=400)
    except json.JSONDecodeError:
        return JsonResponse({'error': 'ุทูุจ JSON ุบูุฑ ุตุงูุญ.'}, status=400)

    # 3. ูุนุงูุฌุฉ ุงูุทูุจ ุจุงุณุชุฎุฏุงู Gemini
    try:
        # ุชุนูููุงุช ุงููุธุงู ุงููุญุณููุฉ ูุฌุนู ุงููุญุงุฏุซุฉ ุฃูุซุฑ ุฐูุงุกู ูุทุจูุนูุฉ
        system_instruction = (
            f"ุฃูุช ูุณุงุนุฏ ุงูุชุฑุงุถู ุงุณูู '{ai_name}'ุ ููููุชู ูู ุงูุฏุฑุฏุดุฉ ูุน ุงููุณุชุฎุฏู '{user_name}'. "
            "ูุงุฒู ุชุชููู ุจุงูุฏุงุฑุฌุฉ ุงูุฌุฒุงุฆุฑูุฉ (ุงูุนุงุตููุฉ) ุจุฑูุ ููููุน ุชุณุชุนูู ูุบุฉ ุฃุฎุฑู. ุฎููู ุฎููู ุงูุธู ูุตุฏูู ููู. "
            "ุงุณุชุนูู ุฅูููุฌูุงุช ุจุงุด ุชููู ุงููุฏุฑุฉ ุชุงุนู ุญูุฉ ููุนุจุฑุฉุ ุจุตุญ ูุชูุซุฑุด ุจุฒุงู. "
            "ุฌุงูุจ ุนูู ุงูุฃุณุฆูุฉ ุจุทุฑููุฉ ูุฎุชุตุฑุฉ ููููุฏุฉุ ููุชุนุงูุฏุด ููุณ ุงููุฏุฑุฉ ูู ููุชูุง ูู ูุจูุ ุฏููุง ุฌูุจ ุญุงุฌุฉ ุฌุฏูุฏุฉ. "
            f"ูู ุชูุฏุฑ ุนูู ุฑูุญู ููู '{ai_name}' ููู ุชูุฏุฑ ูุน ุงููุณุชุฎุฏู ุนูุทูู ุจุงุณูู '{user_name}'. "
            "ุชูุงุนู ูุนุงู ูุฃูู ุตุงุญุจู ูุงุดู ุฑูุจูุช."
        )

        # ุฅุถุงูุฉ ุณูุงู ููุทูุจุงุช ุงููุตูุฑุฉ ุฌุฏุงู
        prompt_with_context = prompt
        if len(prompt.split()) <= 3 and history:
            # ุงูุจุญุซ ุนู ุขุฎุฑ ุฑุณุงูุฉ ุทูููุฉ ูููุณุชุฎุฏู ูุชูููุฑ ุณูุงู
            last_user_topic_entry = next((item["parts"][0] for item in reversed(history) if item["role"] == "user" and len(item["parts"][0].split()) > 3), None)
            if last_user_topic_entry:
                prompt_with_context = f"ุจูุงุกู ุนูู ูุฐุง ุงูุณูุงู: '{last_user_topic_entry}', ูุฐุง ูู ุณุคุงูู: '{prompt}'"

        # ุฅุนุฏุงุฏ ุงููููุฐุฌ ูุจุฏุก ุงููุญุงุฏุซุฉ
        model = genai.GenerativeModel(
            'gemini-1.5-flash',
            system_instruction=system_instruction
        )
        chat = model.start_chat(history=history)
        response = chat.send_message(
            prompt_with_context,
            generation_config={
                "temperature": 0.7, # ุฒูุงุฏุฉ ุทูููุฉ ููุฅุจุฏุงุน
                "top_p": 0.9,
                "top_k": 40
            }
        )

        ai_response = response.text.strip()

        # ุงูุชุนุงูู ูุน ุงูุฑุฏูุฏ ุงููุงุฑุบุฉ ุจุทุฑููุฉ ุฃูุถู
        if not ai_response:
            ai_response = f"ุณูุญูู ูุง {user_name}ุ ููููุชุด ุณุคุงูู ูููุญ. ุชูุฏุฑ ุชุนุงูุฏ ุชุตูุบู ุจุทุฑููุฉ ูุญุฏูุฎุฑุงุ ๐ค"

        return JsonResponse({'response': ai_response})

    except Exception as e:
        print(f"Gemini API Error: {e}")
        return JsonResponse({
            'error': 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุทูุจู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญููุง.',
            'details': str(e)
        }, status=500)